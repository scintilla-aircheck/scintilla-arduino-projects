/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Wed Jul 20 11:31:38 2016. */

#ifndef PB_SENSOR_DATA_PB_H_INCLUDED
#define PB_SENSOR_DATA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SensorDataMessage {
    int32_t lucky_number;
/* @@protoc_insertion_point(struct:SensorDataMessage) */
} SensorDataMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SensorDataMessage_init_default           {0}
#define SensorDataMessage_init_zero              {0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorDataMessage_lucky_number_tag       1

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorDataMessage_fields[2];

/* Maximum encoded size of messages (where known) */
#define SensorDataMessage_size                   11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSOR_DATA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
